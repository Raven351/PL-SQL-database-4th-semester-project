-- AUTOR: Bartosz Baum, nr albumu: 34951, WSB Gda?sk grupa INiS4_2

-- Generated by Oracle SQL Developer Data Modeler 4.2.0.932
--   at:        2018-04-21 15:33:18 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE adres (
    id             INTEGER NOT NULL,
    nazwa          VARCHAR2(100 CHAR),
    ulica          VARCHAR2(60 CHAR) NOT NULL,
    numer          VARCHAR2(10 CHAR) NOT NULL,
    miasto         VARCHAR2(60 CHAR) NOT NULL,
    kod_pocztowy   VARCHAR2(6 CHAR) NOT NULL
);

ALTER TABLE adres ADD CONSTRAINT adres_pk PRIMARY KEY ( id );

CREATE TABLE bonus (
    id              INTEGER NOT NULL,
    tytul           VARCHAR2(100) NOT NULL,
    wynagrodzenie   NUMBER(3,1) NOT NULL
);

ALTER TABLE bonus ADD CONSTRAINT bonus_pk PRIMARY KEY ( id );

ALTER TABLE bonus ADD CONSTRAINT bonus__un UNIQUE ( tytul );

CREATE TABLE bonus_zlecenia (
    bonus_id                 INTEGER NOT NULL,
    zlecenie_pracownika_id   INTEGER NOT NULL
);

ALTER TABLE bonus_zlecenia ADD CONSTRAINT bonus_zlecenia_pk PRIMARY KEY ( bonus_id,zlecenie_pracownika_id );

CREATE TABLE dodatkowy_kierowca (
    id               INTEGER NOT NULL,
    imie             VARCHAR2(40 CHAR) NOT NULL,
    nazwisko         VARCHAR2(40 CHAR) NOT NULL,
    pesel            VARCHAR2(11 CHAR),
    nr_dokumentu     VARCHAR2(50) NOT NULL,
    nr_prawa_jazdy   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE dodatkowy_kierowca ADD CONSTRAINT dodatkowy_kierowca_pk PRIMARY KEY ( id );

ALTER TABLE dodatkowy_kierowca ADD CONSTRAINT dodatkowy_kierowca__un UNIQUE ( pesel,nr_dokumentu,nr_prawa_jazdy );

CREATE TABLE klient (
    id               INTEGER NOT NULL,
    imie             VARCHAR2(40 CHAR) NOT NULL,
    nazwisko         VARCHAR2(40 CHAR) NOT NULL,
    nr_telefonu      VARCHAR2(15 CHAR) NOT NULL,
    nr_telefonu_2    VARCHAR2(15 CHAR),
    email            VARCHAR2(60 CHAR) NOT NULL,
    adres_id         INTEGER NOT NULL,
    pesel            VARCHAR2(11 CHAR),
    nr_dokumentu     VARCHAR2(50) NOT NULL,
    nr_prawa_jazdy   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE klient ADD CONSTRAINT klient_pk PRIMARY KEY ( id );

ALTER TABLE klient ADD CONSTRAINT klient__un UNIQUE ( pesel,nr_dokumentu,nr_prawa_jazdy );

CREATE TABLE koszt_zlecenia (
    poniesione_koszty_p_id   INTEGER
        CONSTRAINT nnc_k_z_p_k_p_id NOT NULL,
    zlecenie_pracownika_id   INTEGER NOT NULL,
    wartosc                  NUMBER(5,2) DEFAULT 0
        CONSTRAINT nnc_koszty_zlecenia_wartosc NOT NULL
);

ALTER TABLE koszt_zlecenia ADD CONSTRAINT koszty_zlecenia_pk PRIMARY KEY ( poniesione_koszty_p_id,zlecenie_pracownika_id );

CREATE TABLE marka_model_samochodu (
    id                     INTEGER NOT NULL,
    marka                  VARCHAR2(50 CHAR) NOT NULL,
    model                  VARCHAR2(50 CHAR) NOT NULL,
    wersja_nadwozia_id     INTEGER NOT NULL,
    segment_samochodu_id   INTEGER NOT NULL
);

ALTER TABLE marka_model_samochodu ADD CONSTRAINT marka_model_samochodu_pk PRIMARY KEY ( id );

CREATE TABLE podatki (
    id        INTEGER NOT NULL,
    tytul     VARCHAR2(100 CHAR) NOT NULL,
    procent   INTEGER NOT NULL
);

ALTER TABLE podatki ADD CONSTRAINT podatki_pk PRIMARY KEY ( id );

CREATE TABLE podatki_pracownika (
    stanowisko_pracownika_p_id   INTEGER NOT NULL,
    stanowisko_pracownika_s_id   INTEGER NOT NULL,
    podatki_id                   INTEGER NOT NULL
);

CREATE TABLE poniesione_koszty_pracownika (
    id      INTEGER
        CONSTRAINT nnc_p_k_p_id NOT NULL,
    tytul   VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE poniesione_koszty_pracownika ADD CONSTRAINT bonusv1_pk PRIMARY KEY ( id );

ALTER TABLE poniesione_koszty_pracownika ADD CONSTRAINT p_k_p__un UNIQUE ( tytul );

CREATE TABLE pracownik (
    id                     INTEGER NOT NULL,
    imie                   VARCHAR2(40 CHAR) NOT NULL,
    nazwisko               VARCHAR2(40 CHAR) NOT NULL,
    nr_telefonu_prywatny   VARCHAR2(15 CHAR) NOT NULL,
    email_prywatny         VARCHAR2(60 CHAR),
    email_firmowy          VARCHAR2(60 CHAR) NOT NULL,
    adres_id               INTEGER NOT NULL
);

ALTER TABLE pracownik ADD CONSTRAINT pracownik_pk PRIMARY KEY ( id );

CREATE TABLE rodzaj_z_p (
    id      INTEGER NOT NULL,
    tytul   VARCHAR2(60 CHAR)
);

ALTER TABLE rodzaj_z_p ADD CONSTRAINT rodzaj_z_p_pk PRIMARY KEY ( id );

CREATE TABLE samochod (
    id                         INTEGER NOT NULL,
    nr_rejestracyjny           VARCHAR2(10 CHAR) NOT NULL,
    nr_polisy                  VARCHAR2(60 CHAR) NOT NULL,
    data_waznosci_polisy       DATE NOT NULL,
    data_waznosci_przegladu    DATE NOT NULL,
    marka_model_samochodu_id   INTEGER NOT NULL
);

ALTER TABLE samochod ADD CONSTRAINT samochod_pk PRIMARY KEY ( id );

ALTER TABLE samochod ADD CONSTRAINT samochod__un UNIQUE ( nr_rejestracyjny,nr_polisy );

CREATE TABLE segment_samochodu (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE segment_samochodu ADD CONSTRAINT segment_samochodu_pk PRIMARY KEY ( id );

CREATE TABLE serwis (
    id            INTEGER NOT NULL,
    data          DATE NOT NULL,
    samochod_id   INTEGER NOT NULL,
    opis          VARCHAR2(2000 CHAR) NOT NULL,
    koszt         NUMBER(7,2),
    warsztat_id   INTEGER NOT NULL,
    szkoda_id     INTEGER
);

ALTER TABLE serwis ADD CONSTRAINT serwis_pk PRIMARY KEY ( id );

CREATE TABLE sposob_rozliczania (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(40 CHAR) NOT NULL,
    opis    VARCHAR2(200 CHAR)
);

ALTER TABLE sposob_rozliczania ADD CONSTRAINT sposob_rozliczania_pk PRIMARY KEY ( id );

ALTER TABLE sposob_rozliczania ADD CONSTRAINT sposob_roz__un UNIQUE ( nazwa );

CREATE TABLE stanowisko (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(60 CHAR) NOT NULL,
    opis    VARCHAR2(200 CHAR)
);

ALTER TABLE stanowisko ADD CONSTRAINT stanowisko_pk PRIMARY KEY ( id );

CREATE TABLE stanowisko_pracownika (
    data_poczatku_zatrudnienia      DATE NOT NULL,
    data_zakonczenia_zatrudnienia   DATE,
    stawka                          NUMBER(10,2) NOT NULL,
    pracownik_id                    INTEGER NOT NULL,
    stanowisko_id                   INTEGER NOT NULL,
    sposob_rozliczania_id           INTEGER NOT NULL
);

ALTER TABLE stanowisko_pracownika ADD CONSTRAINT stanowisko_pracownika_pk PRIMARY KEY ( pracownik_id,stanowisko_id );

CREATE TABLE szkoda (
    id               INTEGER NOT NULL,
    samochod_id      INTEGER NOT NULL,
    data_powstania   DATE NOT NULL,
    opis             VARCHAR2(300 CHAR)
);

ALTER TABLE szkoda ADD CONSTRAINT szkoda_pk PRIMARY KEY ( id );

CREATE TABLE warsztat (
    id         INTEGER NOT NULL,
    nazwa      VARCHAR2(100 CHAR) NOT NULL,
    telefon    VARCHAR2(11 CHAR) NOT NULL,
    email      VARCHAR2(100 CHAR) NOT NULL,
    adres_id   INTEGER NOT NULL
);

ALTER TABLE warsztat ADD CONSTRAINT warsztat_pk PRIMARY KEY ( id );

CREATE TABLE wersja_nadwozia (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE wersja_nadwozia ADD CONSTRAINT wersje_nadwozia_pk PRIMARY KEY ( id );

CREATE TABLE wyplata (
    id                      INTEGER NOT NULL,
    data                    DATE NOT NULL,
    przepracowane_godziny   INTEGER NOT NULL,
    suma_wyplaty_brutto     NUMBER(10,2) NOT NULL,
    suma_wyplaty_netto      NUMBER(10,2),
    okres_poczatek          DATE NOT NULL,
    okres_koniec            DATE NOT NULL,
    s_p_pracownik_id        INTEGER NOT NULL,
    s_p_stanowisko_id       INTEGER NOT NULL
);

ALTER TABLE wyplata ADD CONSTRAINT wyplata_pk PRIMARY KEY ( id );

CREATE TABLE zaliczka (
    id             INTEGER NOT NULL,
    data_wplaty    DATE NOT NULL,
    pracownik_id   INTEGER NOT NULL,
    kwota          NUMBER(5,2) NOT NULL
);

ALTER TABLE zaliczka ADD CONSTRAINT zaliczka_pk PRIMARY KEY ( id );

CREATE TABLE zlecenie (
    id                      INTEGER NOT NULL,
    data_przyjecia          DATE NOT NULL,
    data_podstawienia       DATE NOT NULL,
    data_zwrotu             DATE NOT NULL,
    segment_samochodu_id    INTEGER NOT NULL,
    samochod_id             INTEGER NOT NULL,
    adres_podstawienia_id   INTEGER NOT NULL,
    adres_odbioru_id        INTEGER NOT NULL,
    klient_id               INTEGER NOT NULL,
    dodatkowy_kierowca_id   INTEGER
);

ALTER TABLE zlecenie ADD CONSTRAINT zlecenie_pk PRIMARY KEY ( id );

CREATE TABLE zlecenie_pracownika (
    id                     INTEGER NOT NULL,
    wynagrodzenie_brutto   NUMBER(5,2) DEFAULT 20 NOT NULL,
    wynagrodzenie_netto    NUMBER(5,2) DEFAULT 20 NOT NULL,
    pracownik_id           INTEGER NOT NULL,
    zlecenie_id            INTEGER NOT NULL,
    rodzaj_z_p_id          INTEGER NOT NULL
);

ALTER TABLE zlecenie_pracownika ADD CONSTRAINT zlecenie_pracownika_pk PRIMARY KEY ( id );

ALTER TABLE bonus_zlecenia ADD CONSTRAINT bonus_z_z_pracownika_fk FOREIGN KEY ( zlecenie_pracownika_id )
    REFERENCES zlecenie_pracownika ( id );

ALTER TABLE bonus_zlecenia ADD CONSTRAINT bonus_zlecenia_bonus_fk FOREIGN KEY ( bonus_id )
    REFERENCES bonus ( id );

ALTER TABLE koszt_zlecenia ADD CONSTRAINT k_z_p_k_p_fk FOREIGN KEY ( poniesione_koszty_p_id )
    REFERENCES poniesione_koszty_pracownika ( id );

ALTER TABLE koszt_zlecenia ADD CONSTRAINT k_z_z_p_fk FOREIGN KEY ( zlecenie_pracownika_id )
    REFERENCES zlecenie_pracownika ( id );

ALTER TABLE klient ADD CONSTRAINT klient_adres_fk FOREIGN KEY ( adres_id )
    REFERENCES adres ( id );

ALTER TABLE marka_model_samochodu ADD CONSTRAINT m_m_s_s_s_fk FOREIGN KEY ( segment_samochodu_id )
    REFERENCES segment_samochodu ( id );

ALTER TABLE marka_model_samochodu ADD CONSTRAINT m_m_s_wersja_nadwozia_fk FOREIGN KEY ( wersja_nadwozia_id )
    REFERENCES wersja_nadwozia ( id );

ALTER TABLE podatki_pracownika ADD CONSTRAINT pi_p_stanowisko_fk FOREIGN KEY ( stanowisko_pracownika_p_id,stanowisko_pracownika_s_id )
    REFERENCES stanowisko_pracownika ( pracownik_id,stanowisko_id );

ALTER TABLE podatki_pracownika ADD CONSTRAINT podatki_pracownika_podatki_fk FOREIGN KEY ( podatki_id )
    REFERENCES podatki ( id );

ALTER TABLE pracownik ADD CONSTRAINT pracownik_adres_fk FOREIGN KEY ( adres_id )
    REFERENCES adres ( id );

ALTER TABLE samochod ADD CONSTRAINT s_m_m_s_fk FOREIGN KEY ( marka_model_samochodu_id )
    REFERENCES marka_model_samochodu ( id );

ALTER TABLE stanowisko_pracownika ADD CONSTRAINT s_p_p_fk FOREIGN KEY ( pracownik_id )
    REFERENCES pracownik ( id );

ALTER TABLE stanowisko_pracownika ADD CONSTRAINT s_p_s_fk FOREIGN KEY ( stanowisko_id )
    REFERENCES stanowisko ( id );

ALTER TABLE stanowisko_pracownika ADD CONSTRAINT s_p_s_r_fk FOREIGN KEY ( sposob_rozliczania_id )
    REFERENCES sposob_rozliczania ( id );

ALTER TABLE serwis ADD CONSTRAINT serwis_samochod_fk FOREIGN KEY ( samochod_id )
    REFERENCES samochod ( id );

ALTER TABLE serwis ADD CONSTRAINT serwis_szkoda_fk FOREIGN KEY ( szkoda_id )
    REFERENCES szkoda ( id );

ALTER TABLE serwis ADD CONSTRAINT serwis_warsztat_fk FOREIGN KEY ( warsztat_id )
    REFERENCES warsztat ( id );

ALTER TABLE szkoda ADD CONSTRAINT szkoda_samochod_fk FOREIGN KEY ( samochod_id )
    REFERENCES samochod ( id );

ALTER TABLE warsztat ADD CONSTRAINT warsztat_adres_fk FOREIGN KEY ( adres_id )
    REFERENCES adres ( id );

ALTER TABLE wyplata ADD CONSTRAINT wyplata_s_p_fk FOREIGN KEY ( s_p_pracownik_id,s_p_stanowisko_id )
    REFERENCES stanowisko_pracownika ( pracownik_id,stanowisko_id );

ALTER TABLE zlecenie ADD CONSTRAINT z_dodatkowy_kierowca_fk FOREIGN KEY ( dodatkowy_kierowca_id )
    REFERENCES dodatkowy_kierowca ( id );

ALTER TABLE zlecenie_pracownika ADD CONSTRAINT z_p_p_fk FOREIGN KEY ( pracownik_id )
    REFERENCES pracownik ( id );

ALTER TABLE zlecenie_pracownika ADD CONSTRAINT z_p_rodzaj_z_p_fk FOREIGN KEY ( rodzaj_z_p_id )
    REFERENCES rodzaj_z_p ( id );

ALTER TABLE zlecenie_pracownika ADD CONSTRAINT z_p_z_fk FOREIGN KEY ( zlecenie_id )
    REFERENCES zlecenie ( id );

ALTER TABLE zlecenie ADD CONSTRAINT z_segment_samochodu_fk FOREIGN KEY ( segment_samochodu_id )
    REFERENCES segment_samochodu ( id );

ALTER TABLE zaliczka ADD CONSTRAINT zaliczka_p_fk FOREIGN KEY ( pracownik_id )
    REFERENCES pracownik ( id );

ALTER TABLE zlecenie ADD CONSTRAINT zlecenie_adres_fk FOREIGN KEY ( adres_podstawienia_id )
    REFERENCES adres ( id );

ALTER TABLE zlecenie ADD CONSTRAINT zlecenie_adres_fkv2 FOREIGN KEY ( adres_odbioru_id )
    REFERENCES adres ( id );

ALTER TABLE zlecenie ADD CONSTRAINT zlecenie_klient_fk FOREIGN KEY ( klient_id )
    REFERENCES klient ( id );

ALTER TABLE zlecenie ADD CONSTRAINT zlecenie_samochod_fk FOREIGN KEY ( samochod_id )
    REFERENCES samochod ( id );

CREATE SEQUENCE adres_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER adres_id_trg BEFORE
    INSERT ON adres
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := adres_id_seq.nextval;
END;
/

CREATE SEQUENCE bonus_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER bonus_id_trg BEFORE
    INSERT ON bonus
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := bonus_id_seq.nextval;
END;
/

CREATE SEQUENCE dodatkowy_kierowca_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dodatkowy_kierowca_id_trg BEFORE
    INSERT ON dodatkowy_kierowca
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := dodatkowy_kierowca_id_seq.nextval;
END;
/

CREATE SEQUENCE klient_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klient_id_trg BEFORE
    INSERT ON klient
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := klient_id_seq.nextval;
END;
/

CREATE SEQUENCE marka_model_samochodu_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER marka_model_samochodu_id_trg BEFORE
    INSERT ON marka_model_samochodu
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := marka_model_samochodu_id_seq.nextval;
END;
/

CREATE SEQUENCE podatki_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER podatki_id_trg BEFORE
    INSERT ON podatki
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := podatki_id_seq.nextval;
END;
/

CREATE SEQUENCE poniesione_koszty_pracownika_i START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER poniesione_koszty_pracownika_i BEFORE
    INSERT ON poniesione_koszty_pracownika
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := poniesione_koszty_pracownika_i.nextval;
END;
/

CREATE SEQUENCE pracownik_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pracownik_id_trg BEFORE
    INSERT ON pracownik
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := pracownik_id_seq.nextval;
END;
/

CREATE SEQUENCE rodzaj_z_p_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rodzaj_z_p_id_trg BEFORE
    INSERT ON rodzaj_z_p
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := rodzaj_z_p_id_seq.nextval;
END;
/

CREATE SEQUENCE samochod_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER samochod_id_trg BEFORE
    INSERT ON samochod
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := samochod_id_seq.nextval;
END;
/

CREATE SEQUENCE segment_samochodu_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER segment_samochodu_id_trg BEFORE
    INSERT ON segment_samochodu
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := segment_samochodu_id_seq.nextval;
END;
/

CREATE SEQUENCE serwis_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER serwis_id_trg BEFORE
    INSERT ON serwis
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := serwis_id_seq.nextval;
END;
/

CREATE SEQUENCE sposob_rozliczania_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sposob_rozliczania_id_trg BEFORE
    INSERT ON sposob_rozliczania
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := sposob_rozliczania_id_seq.nextval;
END;
/

CREATE SEQUENCE stanowisko_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER stanowisko_id_trg BEFORE
    INSERT ON stanowisko
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := stanowisko_id_seq.nextval;
END;
/

CREATE SEQUENCE szkoda_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER szkoda_id_trg BEFORE
    INSERT ON szkoda
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := szkoda_id_seq.nextval;
END;
/

CREATE SEQUENCE warsztat_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER warsztat_id_trg BEFORE
    INSERT ON warsztat
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := warsztat_id_seq.nextval;
END;
/

CREATE SEQUENCE wersja_nadwozia_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wersja_nadwozia_id_trg BEFORE
    INSERT ON wersja_nadwozia
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := wersja_nadwozia_id_seq.nextval;
END;
/

CREATE SEQUENCE wyplata_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wyplata_id_trg BEFORE
    INSERT ON wyplata
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := wyplata_id_seq.nextval;
END;
/

CREATE SEQUENCE zaliczka_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zaliczka_id_trg BEFORE
    INSERT ON zaliczka
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := zaliczka_id_seq.nextval;
END;
/

CREATE SEQUENCE zlecenie_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zlecenie_id_trg BEFORE
    INSERT ON zlecenie
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := zlecenie_id_seq.nextval;
END;
/

CREATE SEQUENCE z_p_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER z_p_id_trg BEFORE
    INSERT ON zlecenie_pracownika
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := z_p_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            25
-- CREATE INDEX                             0
-- ALTER TABLE                             60
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          21
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         21
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
